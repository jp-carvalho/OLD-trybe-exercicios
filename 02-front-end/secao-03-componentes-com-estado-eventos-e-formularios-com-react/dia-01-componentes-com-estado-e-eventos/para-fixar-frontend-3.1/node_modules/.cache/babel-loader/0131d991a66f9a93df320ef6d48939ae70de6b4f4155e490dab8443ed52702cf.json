{"ast":null,"code":"var _jsxFileName = \"/home/desenho/Documents/trybe-exercicios/02-front-end/secao-03-componentes-com-estado-eventos-e-formularios-com-react/dia-01-componentes-com-estado-e-eventos/para-fixar-frontend-3.1/src/App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clickOne: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  //checa se o numero é par e adiciona a cor verde ou branca\n  //como não estamos utilizando um arquivo .css faremos inline dentro do return\n  getButtonColor(num) {\n    return num % 2 === 0 ? 'green' : 'white';\n  }\n  handleClickOne() {\n    this.setState(_ref => {\n      let {\n        clickOne\n      } = _ref;\n      return {\n        clickOne: clickOne + 1\n      };\n    });\n  }\n  render() {\n    const {\n      clickOne\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClickOne,\n      children: clickOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","state","clickOne","handleClick","bind","getButtonColor","num","handleClickOne","setState","_ref","render","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/desenho/Documents/trybe-exercicios/02-front-end/secao-03-componentes-com-estado-eventos-e-formularios-com-react/dia-01-componentes-com-estado-e-eventos/para-fixar-frontend-3.1/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.handleClick = this.handleClick.bind(this)\n  }\n\nstate = {\n  clickOne: 0,\n}\n\n//checa se o numero é par e adiciona a cor verde ou branca\n//como não estamos utilizando um arquivo .css faremos inline dentro do return\ngetButtonColor(num) {\n  return num % 2 === 0 ? 'green' : 'white';\n}\n\nhandleClickOne(){\n  this.setState(({ clickOne }) => ({\n    clickOne: clickOne + 1,\n  }))\n}\n\n  render() {\n    const { clickOne } = this.state\n    return (\n      <button onClick={this.handleClickOne}>{ clickOne }</button>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,EAAE;IAAA,KAIXC,KAAK,GAAG;MACNC,QAAQ,EAAE;IACZ,CAAC;IALG,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAChD;EAMF;EACA;EACAC,cAAcA,CAACC,GAAG,EAAE;IAClB,OAAOA,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO;EAC1C;EAEAC,cAAcA,CAAA,EAAE;IACd,IAAI,CAACC,QAAQ,CAACC,IAAA;MAAA,IAAC;QAAEP;MAAS,CAAC,GAAAO,IAAA;MAAA,OAAM;QAC/BP,QAAQ,EAAEA,QAAQ,GAAG;MACvB,CAAC;IAAA,CAAC,CAAC;EACL;EAEEQ,MAAMA,CAAA,EAAG;IACP,MAAM;MAAER;IAAS,CAAC,GAAG,IAAI,CAACD,KAAK;IAC/B,oBACEH,OAAA;MAAQa,OAAO,EAAE,IAAI,CAACJ,cAAe;MAAAK,QAAA,EAAGV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EAE/D;AACF;AAEA,eAAejB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}